# Pre-configuration
$mainMod = SUPER

# Basic & advanced bindings
bind = ALT, TAB, cyclenext
bind = $mainMod, Q, killactive,
bind = $mainMod, T, exec, $terminal
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, R, exec, $menu
bind = $mainMod, N, exec, $notificationsMenu
# bind = $mainMod SHIFT, M, exit,
bind = $mainMod, L, exec, hyprlock
# bind = CTRL ALT, DEL, exec, wlogout
bind = $mainMod SHIFT, L, exec, wlogout
bind = $mainMod, X, exec, grim -c ~/Pictures/grim-screenshots/grim-$(date +%d_%m_%Y-%H:%M:%S-%s).png; hyprctl notify 5 4500 "  Screenshot taken"; echo "\a"

bind = $mainMod, F, fullscreen, 
bind = $mainMod, P, pin,
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, U, togglefloating, 
bind = $mainMod SHIFT, U, pseudo, # gonna dwindle

# Function (Fn) Media keybindings
bind = $mainMod, F2, exec, ~/.config/hypr/gamemode.sh
# bind = $mainMod, F5, exec, pavucontrol
    # - [x] TODO: Add `wob` outputs
    # - [ ] TODO: Fix `wob`'s output of muting speakers's volume
    # - [x] TODO: Fix muting over and over instead of toggling for mic
bindl = , XF86AudioRaiseVolume, exec, pamixer --increase 5; echo $(pamixer --get-volume) > /tmp/wobpipe
bindl = , XF86AudioLowerVolume, exec, pamixer --decrease 5; echo $(pamixer --get-volume) > /tmp/wobpipe
bindl = , XF86AudioMute, exec, pamixer --toggle-mute; echo $(pamixer --get-volume) > /tmp/wobpipe; hyprctl notify 5 5000 "  Speakers are (un)muted"
bindl = , XF86AudioMicMute, exec, pamixer --toggle-mute --default-source; hyprctl notify 5 5000 "  Microphone is (un)muted"
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = $mainMod, K, exec, playerctl play-pause
bindl = $mainMod, B, exec, playerctl next
bindl = $mainMod SHIFT, B, exec, playerctl previous
    # Alternate to pamixer: wpctl

# Group bindings
bind = $mainMod, G, togglegroup,
bind = $mainMod, TAB, changegroupactive, f
bind = $mainMod SHIFT, TAB, changegroupactive, b

# Window specific bindings
    # Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

    # Move windows with mainMod + Shift + arrow keys
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Workspace specific bindings
    # Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

    # Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Mouse specific bindings
    # Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

bind = $mainMod, page_down, workspace, e-1
bind = $mainMod, page_up, workspace, e+1

    # Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
